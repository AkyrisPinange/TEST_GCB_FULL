{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp2;\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InputMask from 'inputmask-core';\nvar KEYCODE_Z = 90;\nvar KEYCODE_Y = 89;\n\nfunction isUndo(e) {\n  return (e.ctrlKey || e.metaKey) && e.keyCode === (e.shiftKey ? KEYCODE_Y : KEYCODE_Z);\n}\n\nfunction isRedo(e) {\n  return (e.ctrlKey || e.metaKey) && e.keyCode === (e.shiftKey ? KEYCODE_Z : KEYCODE_Y);\n}\n\nfunction getSelection(el) {\n  var start = void 0,\n      end = void 0;\n\n  if (el.selectionStart !== undefined) {\n    start = el.selectionStart;\n    end = el.selectionEnd;\n  } else {\n    try {\n      el.focus();\n      var rangeEl = el.createTextRange();\n      var clone = rangeEl.duplicate();\n      rangeEl.moveToBookmark(document.selection.createRange().getBookmark());\n      clone.setEndPoint('EndToStart', rangeEl);\n      start = clone.text.length;\n      end = start + rangeEl.text.length;\n    } catch (e) {\n      /* not focused or not visible */\n    }\n  }\n\n  return {\n    start: start,\n    end: end\n  };\n}\n\nfunction setSelection(el, selection) {\n  try {\n    if (el.selectionStart !== undefined) {\n      el.focus();\n      el.setSelectionRange(selection.start, selection.end);\n    } else {\n      el.focus();\n      var rangeEl = el.createTextRange();\n      rangeEl.collapse(true);\n      rangeEl.moveStart('character', selection.start);\n      rangeEl.moveEnd('character', selection.end - selection.start);\n      rangeEl.select();\n    }\n  } catch (e) {\n    /* not focused or not visible */\n  }\n}\n\nvar MaskedInput = (_temp2 = _class = function (_React$Component) {\n  _inherits(MaskedInput, _React$Component);\n\n  function MaskedInput() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MaskedInput);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._onChange = function (e) {\n      // console.log('onChange', JSON.stringify(getSelection(this.input)), e.target.value)\n      var maskValue = _this.mask.getValue();\n\n      var incomingValue = e.target.value;\n\n      if (incomingValue !== maskValue) {\n        // only modify mask if form contents actually changed\n        _this._updateMaskSelection();\n\n        _this.mask.setValue(incomingValue); // write the whole updated value into the mask\n\n\n        e.target.value = _this._getDisplayValue(); // update the form with pattern applied to the value\n\n        _this._updateInputSelection();\n      }\n\n      if (_this.props.onChange) {\n        _this.props.onChange(e);\n      }\n    }, _this._onKeyDown = function (e) {\n      // console.log('onKeyDown', JSON.stringify(getSelection(this.input)), e.key, e.target.value)\n      if (isUndo(e)) {\n        e.preventDefault();\n\n        if (_this.mask.undo()) {\n          e.target.value = _this._getDisplayValue();\n\n          _this._updateInputSelection();\n\n          if (_this.props.onChange) {\n            _this.props.onChange(e);\n          }\n        }\n\n        return;\n      } else if (isRedo(e)) {\n        e.preventDefault();\n\n        if (_this.mask.redo()) {\n          e.target.value = _this._getDisplayValue();\n\n          _this._updateInputSelection();\n\n          if (_this.props.onChange) {\n            _this.props.onChange(e);\n          }\n        }\n\n        return;\n      }\n\n      if (e.key === 'Backspace') {\n        e.preventDefault();\n\n        _this._updateMaskSelection();\n\n        if (_this.mask.backspace()) {\n          var value = _this._getDisplayValue();\n\n          e.target.value = value;\n\n          if (value) {\n            _this._updateInputSelection();\n          }\n\n          if (_this.props.onChange) {\n            _this.props.onChange(e);\n          }\n        }\n      }\n    }, _this._onKeyPress = function (e) {\n      // console.log('onKeyPress', JSON.stringify(getSelection(this.input)), e.key, e.target.value)\n      // Ignore modified key presses\n      // Ignore enter key to allow form submission\n      if (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') {\n        return;\n      }\n\n      e.preventDefault();\n\n      _this._updateMaskSelection();\n\n      if (_this.mask.input(e.key || e.data)) {\n        e.target.value = _this.mask.getValue();\n\n        _this._updateInputSelection();\n\n        if (_this.props.onChange) {\n          _this.props.onChange(e);\n        }\n      }\n    }, _this._onPaste = function (e) {\n      // console.log('onPaste', JSON.stringify(getSelection(this.input)), e.clipboardData.getData('Text'), e.target.value)\n      e.preventDefault();\n\n      _this._updateMaskSelection(); // getData value needed for IE also works in FF & Chrome\n\n\n      if (_this.mask.paste(e.clipboardData.getData('Text'))) {\n        e.target.value = _this.mask.getValue(); // Timeout needed for IE\n\n        setTimeout(function () {\n          return _this._updateInputSelection();\n        }, 0);\n\n        if (_this.props.onChange) {\n          _this.props.onChange(e);\n        }\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  MaskedInput.prototype.componentWillMount = function componentWillMount() {\n    var options = {\n      pattern: this.props.mask,\n      value: this.props.value,\n      formatCharacters: this.props.formatCharacters\n    };\n\n    if (this.props.placeholderChar) {\n      options.placeholderChar = this.props.placeholderChar;\n    }\n\n    this.mask = new InputMask(options);\n  };\n\n  MaskedInput.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (this.props.mask !== nextProps.mask && this.props.value !== nextProps.mask) {\n      // if we get a new value and a new mask at the same time\n      // check if the mask.value is still the initial value\n      // - if so use the nextProps value\n      // - otherwise the `this.mask` has a value for us (most likely from paste action)\n      if (this.mask.getValue() === this.mask.emptyValue) {\n        this.mask.setPattern(nextProps.mask, {\n          value: nextProps.value\n        });\n      } else {\n        this.mask.setPattern(nextProps.mask, {\n          value: this.mask.getRawValue()\n        });\n      }\n    } else if (this.props.mask !== nextProps.mask) {\n      this.mask.setPattern(nextProps.mask, {\n        value: this.mask.getRawValue()\n      });\n    } else if (this.props.value !== nextProps.value) {\n      this.mask.setValue(nextProps.value);\n    }\n  };\n\n  MaskedInput.prototype.componentWillUpdate = function componentWillUpdate(nextProps, nextState) {\n    if (nextProps.mask !== this.props.mask) {\n      this._updatePattern(nextProps);\n    }\n  };\n\n  MaskedInput.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.mask !== this.props.mask && this.mask.selection.start) {\n      this._updateInputSelection();\n    }\n  };\n\n  MaskedInput.prototype._updatePattern = function _updatePattern(props) {\n    this.mask.setPattern(props.mask, {\n      value: this.mask.getRawValue(),\n      selection: getSelection(this.input)\n    });\n  };\n\n  MaskedInput.prototype._updateMaskSelection = function _updateMaskSelection() {\n    this.mask.selection = getSelection(this.input);\n  };\n\n  MaskedInput.prototype._updateInputSelection = function _updateInputSelection() {\n    setSelection(this.input, this.mask.selection);\n  };\n\n  MaskedInput.prototype._getDisplayValue = function _getDisplayValue() {\n    var value = this.mask.getValue();\n    return value === this.mask.emptyValue ? '' : value;\n  };\n\n  MaskedInput.prototype._keyPressPropName = function _keyPressPropName() {\n    if (typeof navigator !== 'undefined') {\n      return navigator.userAgent.match(/Android/i) ? 'onBeforeInput' : 'onKeyPress';\n    }\n\n    return 'onKeyPress';\n  };\n\n  MaskedInput.prototype._getEventHandlers = function _getEventHandlers() {\n    var _ref;\n\n    return _ref = {\n      onChange: this._onChange,\n      onKeyDown: this._onKeyDown,\n      onPaste: this._onPaste\n    }, _ref[this._keyPressPropName()] = this._onKeyPress, _ref;\n  };\n\n  MaskedInput.prototype.focus = function focus() {\n    this.input.focus();\n  };\n\n  MaskedInput.prototype.blur = function blur() {\n    this.input.blur();\n  };\n\n  MaskedInput.prototype.render = function render() {\n    var _this2 = this;\n\n    var ref = function ref(r) {\n      _this2.input = r;\n    };\n\n    var maxLength = this.mask.pattern.length;\n\n    var value = this._getDisplayValue();\n\n    var eventHandlers = this._getEventHandlers();\n\n    var _props = this.props,\n        _props$size = _props.size,\n        size = _props$size === undefined ? maxLength : _props$size,\n        _props$placeholder = _props.placeholder,\n        placeholder = _props$placeholder === undefined ? this.mask.emptyValue : _props$placeholder;\n\n    var _props2 = this.props,\n        placeholderChar = _props2.placeholderChar,\n        formatCharacters = _props2.formatCharacters,\n        cleanedProps = _objectWithoutProperties(_props2, ['placeholderChar', 'formatCharacters']); // eslint-disable-line no-unused-vars\n\n\n    var inputProps = _extends({}, cleanedProps, eventHandlers, {\n      ref: ref,\n      maxLength: maxLength,\n      value: value,\n      size: size,\n      placeholder: placeholder\n    });\n\n    return React.createElement('input', inputProps);\n  };\n\n  return MaskedInput;\n}(React.Component), _class.defaultProps = {\n  value: ''\n}, _temp2);\nMaskedInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  mask: PropTypes.string.isRequired,\n  formatCharacters: PropTypes.object,\n  placeholderChar: PropTypes.string\n} : {};\nexport default MaskedInput;","map":{"version":3,"sources":["/Users/effetive/Documents/React-APP/template-gcb/node_modules/react-maskedinput/es/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_class","_temp2","_objectWithoutProperties","obj","keys","indexOf","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PropTypes","InputMask","KEYCODE_Z","KEYCODE_Y","isUndo","e","ctrlKey","metaKey","keyCode","shiftKey","isRedo","getSelection","el","start","end","selectionStart","undefined","selectionEnd","focus","rangeEl","createTextRange","clone","duplicate","moveToBookmark","document","selection","createRange","getBookmark","setEndPoint","text","setSelection","setSelectionRange","collapse","moveStart","moveEnd","select","MaskedInput","_React$Component","_temp","_this","_ret","_len","args","Array","_key","apply","concat","_onChange","maskValue","mask","getValue","incomingValue","_updateMaskSelection","setValue","_getDisplayValue","_updateInputSelection","props","onChange","_onKeyDown","preventDefault","undo","redo","backspace","_onKeyPress","altKey","input","data","_onPaste","paste","clipboardData","getData","setTimeout","componentWillMount","options","pattern","formatCharacters","placeholderChar","componentWillReceiveProps","nextProps","emptyValue","setPattern","getRawValue","componentWillUpdate","nextState","_updatePattern","componentDidUpdate","prevProps","_keyPressPropName","navigator","userAgent","match","_getEventHandlers","_ref","onKeyDown","onPaste","blur","render","_this2","ref","r","maxLength","eventHandlers","_props","_props$size","size","_props$placeholder","placeholder","_props2","cleanedProps","inputProps","createElement","Component","defaultProps","propTypes","process","env","NODE_ENV","string","isRequired","object"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _class, _temp2;\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InputMask from 'inputmask-core';\n\nvar KEYCODE_Z = 90;\nvar KEYCODE_Y = 89;\n\nfunction isUndo(e) {\n  return (e.ctrlKey || e.metaKey) && e.keyCode === (e.shiftKey ? KEYCODE_Y : KEYCODE_Z);\n}\n\nfunction isRedo(e) {\n  return (e.ctrlKey || e.metaKey) && e.keyCode === (e.shiftKey ? KEYCODE_Z : KEYCODE_Y);\n}\n\nfunction getSelection(el) {\n  var start = void 0,\n      end = void 0;\n  if (el.selectionStart !== undefined) {\n    start = el.selectionStart;\n    end = el.selectionEnd;\n  } else {\n    try {\n      el.focus();\n      var rangeEl = el.createTextRange();\n      var clone = rangeEl.duplicate();\n\n      rangeEl.moveToBookmark(document.selection.createRange().getBookmark());\n      clone.setEndPoint('EndToStart', rangeEl);\n\n      start = clone.text.length;\n      end = start + rangeEl.text.length;\n    } catch (e) {/* not focused or not visible */}\n  }\n\n  return { start: start, end: end };\n}\n\nfunction setSelection(el, selection) {\n  try {\n    if (el.selectionStart !== undefined) {\n      el.focus();\n      el.setSelectionRange(selection.start, selection.end);\n    } else {\n      el.focus();\n      var rangeEl = el.createTextRange();\n      rangeEl.collapse(true);\n      rangeEl.moveStart('character', selection.start);\n      rangeEl.moveEnd('character', selection.end - selection.start);\n      rangeEl.select();\n    }\n  } catch (e) {/* not focused or not visible */}\n}\n\nvar MaskedInput = (_temp2 = _class = function (_React$Component) {\n  _inherits(MaskedInput, _React$Component);\n\n  function MaskedInput() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MaskedInput);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this._onChange = function (e) {\n      // console.log('onChange', JSON.stringify(getSelection(this.input)), e.target.value)\n\n      var maskValue = _this.mask.getValue();\n      var incomingValue = e.target.value;\n      if (incomingValue !== maskValue) {\n        // only modify mask if form contents actually changed\n        _this._updateMaskSelection();\n        _this.mask.setValue(incomingValue); // write the whole updated value into the mask\n        e.target.value = _this._getDisplayValue(); // update the form with pattern applied to the value\n        _this._updateInputSelection();\n      }\n\n      if (_this.props.onChange) {\n        _this.props.onChange(e);\n      }\n    }, _this._onKeyDown = function (e) {\n      // console.log('onKeyDown', JSON.stringify(getSelection(this.input)), e.key, e.target.value)\n\n      if (isUndo(e)) {\n        e.preventDefault();\n        if (_this.mask.undo()) {\n          e.target.value = _this._getDisplayValue();\n          _this._updateInputSelection();\n          if (_this.props.onChange) {\n            _this.props.onChange(e);\n          }\n        }\n        return;\n      } else if (isRedo(e)) {\n        e.preventDefault();\n        if (_this.mask.redo()) {\n          e.target.value = _this._getDisplayValue();\n          _this._updateInputSelection();\n          if (_this.props.onChange) {\n            _this.props.onChange(e);\n          }\n        }\n        return;\n      }\n\n      if (e.key === 'Backspace') {\n        e.preventDefault();\n        _this._updateMaskSelection();\n        if (_this.mask.backspace()) {\n          var value = _this._getDisplayValue();\n          e.target.value = value;\n          if (value) {\n            _this._updateInputSelection();\n          }\n          if (_this.props.onChange) {\n            _this.props.onChange(e);\n          }\n        }\n      }\n    }, _this._onKeyPress = function (e) {\n      // console.log('onKeyPress', JSON.stringify(getSelection(this.input)), e.key, e.target.value)\n\n      // Ignore modified key presses\n      // Ignore enter key to allow form submission\n      if (e.metaKey || e.altKey || e.ctrlKey || e.key === 'Enter') {\n        return;\n      }\n\n      e.preventDefault();\n      _this._updateMaskSelection();\n      if (_this.mask.input(e.key || e.data)) {\n        e.target.value = _this.mask.getValue();\n        _this._updateInputSelection();\n        if (_this.props.onChange) {\n          _this.props.onChange(e);\n        }\n      }\n    }, _this._onPaste = function (e) {\n      // console.log('onPaste', JSON.stringify(getSelection(this.input)), e.clipboardData.getData('Text'), e.target.value)\n\n      e.preventDefault();\n      _this._updateMaskSelection();\n      // getData value needed for IE also works in FF & Chrome\n      if (_this.mask.paste(e.clipboardData.getData('Text'))) {\n        e.target.value = _this.mask.getValue();\n        // Timeout needed for IE\n        setTimeout(function () {\n          return _this._updateInputSelection();\n        }, 0);\n        if (_this.props.onChange) {\n          _this.props.onChange(e);\n        }\n      }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  MaskedInput.prototype.componentWillMount = function componentWillMount() {\n    var options = {\n      pattern: this.props.mask,\n      value: this.props.value,\n      formatCharacters: this.props.formatCharacters\n    };\n    if (this.props.placeholderChar) {\n      options.placeholderChar = this.props.placeholderChar;\n    }\n    this.mask = new InputMask(options);\n  };\n\n  MaskedInput.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (this.props.mask !== nextProps.mask && this.props.value !== nextProps.mask) {\n      // if we get a new value and a new mask at the same time\n      // check if the mask.value is still the initial value\n      // - if so use the nextProps value\n      // - otherwise the `this.mask` has a value for us (most likely from paste action)\n      if (this.mask.getValue() === this.mask.emptyValue) {\n        this.mask.setPattern(nextProps.mask, { value: nextProps.value });\n      } else {\n        this.mask.setPattern(nextProps.mask, { value: this.mask.getRawValue() });\n      }\n    } else if (this.props.mask !== nextProps.mask) {\n      this.mask.setPattern(nextProps.mask, { value: this.mask.getRawValue() });\n    } else if (this.props.value !== nextProps.value) {\n      this.mask.setValue(nextProps.value);\n    }\n  };\n\n  MaskedInput.prototype.componentWillUpdate = function componentWillUpdate(nextProps, nextState) {\n    if (nextProps.mask !== this.props.mask) {\n      this._updatePattern(nextProps);\n    }\n  };\n\n  MaskedInput.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.mask !== this.props.mask && this.mask.selection.start) {\n      this._updateInputSelection();\n    }\n  };\n\n  MaskedInput.prototype._updatePattern = function _updatePattern(props) {\n    this.mask.setPattern(props.mask, {\n      value: this.mask.getRawValue(),\n      selection: getSelection(this.input)\n    });\n  };\n\n  MaskedInput.prototype._updateMaskSelection = function _updateMaskSelection() {\n    this.mask.selection = getSelection(this.input);\n  };\n\n  MaskedInput.prototype._updateInputSelection = function _updateInputSelection() {\n    setSelection(this.input, this.mask.selection);\n  };\n\n  MaskedInput.prototype._getDisplayValue = function _getDisplayValue() {\n    var value = this.mask.getValue();\n    return value === this.mask.emptyValue ? '' : value;\n  };\n\n  MaskedInput.prototype._keyPressPropName = function _keyPressPropName() {\n    if (typeof navigator !== 'undefined') {\n      return navigator.userAgent.match(/Android/i) ? 'onBeforeInput' : 'onKeyPress';\n    }\n    return 'onKeyPress';\n  };\n\n  MaskedInput.prototype._getEventHandlers = function _getEventHandlers() {\n    var _ref;\n\n    return _ref = {\n      onChange: this._onChange,\n      onKeyDown: this._onKeyDown,\n      onPaste: this._onPaste\n    }, _ref[this._keyPressPropName()] = this._onKeyPress, _ref;\n  };\n\n  MaskedInput.prototype.focus = function focus() {\n    this.input.focus();\n  };\n\n  MaskedInput.prototype.blur = function blur() {\n    this.input.blur();\n  };\n\n  MaskedInput.prototype.render = function render() {\n    var _this2 = this;\n\n    var ref = function ref(r) {\n      _this2.input = r;\n    };\n    var maxLength = this.mask.pattern.length;\n    var value = this._getDisplayValue();\n    var eventHandlers = this._getEventHandlers();\n    var _props = this.props,\n        _props$size = _props.size,\n        size = _props$size === undefined ? maxLength : _props$size,\n        _props$placeholder = _props.placeholder,\n        placeholder = _props$placeholder === undefined ? this.mask.emptyValue : _props$placeholder;\n\n    var _props2 = this.props,\n        placeholderChar = _props2.placeholderChar,\n        formatCharacters = _props2.formatCharacters,\n        cleanedProps = _objectWithoutProperties(_props2, ['placeholderChar', 'formatCharacters']); // eslint-disable-line no-unused-vars\n\n\n    var inputProps = _extends({}, cleanedProps, eventHandlers, { ref: ref, maxLength: maxLength, value: value, size: size, placeholder: placeholder });\n    return React.createElement('input', inputProps);\n  };\n\n  return MaskedInput;\n}(React.Component), _class.defaultProps = {\n  value: ''\n}, _temp2);\nMaskedInput.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  mask: PropTypes.string.isRequired,\n\n  formatCharacters: PropTypes.object,\n  placeholderChar: PropTypes.string\n} : {};\n\n\nexport default MaskedInput;"]},"metadata":{},"sourceType":"module"}