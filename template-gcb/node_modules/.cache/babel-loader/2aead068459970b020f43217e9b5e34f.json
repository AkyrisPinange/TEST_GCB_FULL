{"ast":null,"code":"var _jsxFileName = \"/Users/effetive/Documents/React-APP/template-gcb/src/pages/doctors/Form/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form, Col, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport InputMask from \"react-input-mask\";\nimport api from \"../../../services/api\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar SpecialtiesSelect;\nvar Specialties; //inferces para facilitar a manipulação dos dados\n\nconst listSpecialties = [\"Alergologia\", \"Angiologia\", \"Buco maxilo\", \"Cardiologia clínca\", \"Cardiologia infantil\", \"Cirurgia cabeça e pescoço\", \"Cirurgia cardíaca\", \"Cirurgia de tórax\"]; //dados para o dropdowns\n\nconst SpecialtiesOptions = [{\n  value: \"Alergologia\",\n  label: \"Alergologia\"\n}, {\n  value: \"Angiologia\",\n  label: \"Angiologia\"\n}, {\n  value: \"Buco maxilo\",\n  label: \"Buco maxilo\"\n}, {\n  value: \"Cardiologia clínca\",\n  label: \"Cardiologia clínca\"\n}, {\n  value: \"Cardiologia infantil\",\n  label: \"Cardiologia infantil\"\n}, {\n  value: \"Cirurgia cabeça e pescoço\",\n  label: \"Cirurgia cabeça e pescoço\"\n}, {\n  value: \"Cirurgia cardíaca\",\n  label: \"Cirurgia cardíaca\"\n}, {\n  value: \"Cirurgia de tórax\",\n  label: \"Cirurgia de tórax\"\n}]; //REACT\n\nconst Doctors = () => {\n  _s();\n\n  useEffect(() => {\n    loadSpecialties();\n  });\n  const history = useHistory(); //useState\n\n  const [cep, setCep] = useState({\n    cep: \"\"\n  });\n  const [specialtiesDoctor, setSpecialtiesDoctor] = useState({\n    id_doctor: \"\",\n    id_specialties: \"\"\n  });\n  const [adress, setAdress] = useState({\n    id: \"\",\n    cep: \"\",\n    logradouro: \"\",\n    complemento: \"\",\n    bairro: \"\",\n    localidade: \"\",\n    id_doctor: \"\",\n    uf: \"\"\n  });\n  const [doctor, setDoctor] = useState({\n    id: \"\",\n    nome: \"\",\n    crm: 0,\n    telFixo: 0,\n    telCelular: 0\n  }); //cadastra especialidades no banco se não existirem\n\n  async function loadSpecialties() {\n    const getSpecialties = await api.get(\"/Specialties\");\n\n    if (getSpecialties.data.length == 0) {\n      listSpecialties.forEach(index => {\n        registerSpecialties(index);\n      });\n    } // SpecialtiesSelect = getSpecialties.data;\n\n  }\n\n  async function registerSpecialties(specialties) {\n    const responseSpecialties = await api.post(\"Specialties\", {\n      name: specialties\n    });\n  } //funcao responsavel por consultar o cep\n\n\n  async function GetCep(e) {\n    setCep({ ...cep,\n      //garante que o input só recebera numeros\n      [e.target.name]: e.target.value.replace(/\\D/g, \"\")\n    });\n    let lengthCep = e.target.value.replace(/\\D/g, \"\").length;\n    let cepNumber = e.target.value.replace(/\\D/g, \"\"); //valida se o usuario digitou os 8 digitos cep para poder fazer a requisicao\n\n    if (lengthCep == 8) {\n      const resp = await api.post(\"/CEP/\" + cepNumber + \"\");\n      setAdress({\n        id: \"\",\n        cep: resp.data.cep == undefined ? \"\" : resp.data.cep,\n        logradouro: resp.data.logradouro == undefined ? \"\" : resp.data.logradouro,\n        complemento: resp.data.complemento == undefined ? \"\" : resp.data.complemento,\n        bairro: resp.data.bairro == undefined ? \"\" : resp.data.bairro,\n        localidade: resp.data.localidade == undefined ? \"\" : resp.data.localidade,\n        uf: resp.data.uf == undefined ? \"\" : resp.data.uf,\n        id_doctor: \"\"\n      });\n    }\n  }\n\n  function UpdatedSpecialties(e) {\n    SpecialtiesSelect = e;\n  }\n\n  function UpdatedDoctor(e) {\n    setDoctor({ ...doctor,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function UpdatedAdress(e) {\n    setAdress({ ...adress,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    let numberCel = doctor.telCelular.toString().replaceAll(\"(\", \"\").replace(\")\", \"\").replace(\"-\", \"\");\n    let numberFix = doctor.telFixo.toString().replace(\"(\", \"\").replace(\")\", \"\").replace(\"-\", \"\");\n    doctor.telCelular = parseInt(numberCel);\n    doctor.telFixo = parseInt(numberFix);\n    const respDoctor = await api.post(\"/InfoDoctors\", doctor); // console.log(respDoctor);\n\n    adress.id_doctor = respDoctor.data.id;\n    const respAdress = await api.post(\"/Adress\", adress);\n    console.log(respAdress);\n    var arraySpecialties = [];\n    const respSpecialties = await api.get(\"/Specialties\");\n    console.log(SpecialtiesSelect);\n    SpecialtiesSelect.forEach(index => {\n      arraySpecialties.push(respSpecialties.data.filter(s => s.name === index.value));\n    });\n    await Promise.all(arraySpecialties.map(async elem => {\n      set;\n      let id_specialties = elem[0].id;\n      let id_doctor = respDoctor.data.id;\n      const respSpecialtiesDoctor = await api.post(\"/InfoDoctorsSpecialties\", {\n        id_specialties: id_specialties,\n        id_doctor: id_doctor\n      }); //  console.log(respSpecialtiesDoctor)\n    }));\n  }\n\n  function Back() {\n    history.goBack();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header-doctors\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        size: \"sm\",\n        onClick: Back,\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            maxLength: 120,\n            type: \"text\",\n            name: \"nome\",\n            onChange: e => UpdatedDoctor(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Tel. Celular\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n                placeholder: \"(81)88888-8888\",\n                className: \"phone\",\n                name: \"telCelular\",\n                mask: \"(99)999999-9999\",\n                onChange: e => UpdatedDoctor(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Tel. Fixo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n                placeholder: \"(81)88888-8888\",\n                className: \"phone\",\n                name: \"telFixo\",\n                mask: \"(99)999999-9999\",\n                onChange: e => UpdatedDoctor(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"CRM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                maxLength: 7,\n                type: \"text\",\n                name: \"crm\",\n                onChange: e => UpdatedDoctor(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Especialidades\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            isMulti: true,\n            name: \"specialties\",\n            options: SpecialtiesOptions,\n            className: \"basic-multi-select\",\n            classNamePrefix: \"Selecione\",\n            placeholder: \"Selecione\",\n            onChange: e => UpdatedSpecialties(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cadastro de Endere\\xE7o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"CEP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"cep\",\n                maxLength: 8,\n                placeholder: \"Digite o CEP\",\n                value: cep.cep,\n                onChange: e => GetCep(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Cidade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"\",\n                type: \"text\",\n                name: \"localidade\",\n                value: adress.localidade,\n                onChange: e => UpdatedAdress(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Estado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"\",\n                type: \"text\",\n                name: \"uf\",\n                value: adress.uf,\n                onChange: e => UpdatedAdress(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Logradouro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"\",\n                type: \"text\",\n                name: \"logradouro\",\n                value: adress.logradouro,\n                onChange: e => UpdatedAdress(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Bairro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"\",\n                type: \"text\",\n                name: \"bairro\",\n                value: adress.bairro,\n                onChange: e => UpdatedAdress(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Complemento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"\",\n                type: \"text\",\n                name: \"complemento\",\n                value: adress.complemento,\n                onChange: e => UpdatedAdress(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          type: \"submit\",\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Doctors, \"NcgaQOMR6+RFL3n7kFr4z5rv+6Y=\", false, function () {\n  return [useHistory];\n});\n\n_c = Doctors;\nexport default Doctors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Doctors\");","map":{"version":3,"sources":["/Users/effetive/Documents/React-APP/template-gcb/src/pages/doctors/Form/index.tsx"],"names":["React","useState","useEffect","Button","Form","Col","Row","useHistory","Select","InputMask","api","SpecialtiesSelect","Specialties","listSpecialties","SpecialtiesOptions","value","label","Doctors","loadSpecialties","history","cep","setCep","specialtiesDoctor","setSpecialtiesDoctor","id_doctor","id_specialties","adress","setAdress","id","logradouro","complemento","bairro","localidade","uf","doctor","setDoctor","nome","crm","telFixo","telCelular","getSpecialties","get","data","length","forEach","index","registerSpecialties","specialties","responseSpecialties","post","name","GetCep","e","target","replace","lengthCep","cepNumber","resp","undefined","UpdatedSpecialties","UpdatedDoctor","UpdatedAdress","onSubmit","preventDefault","numberCel","toString","replaceAll","numberFix","parseInt","respDoctor","respAdress","console","log","arraySpecialties","respSpecialties","push","filter","s","Promise","all","map","elem","set","respSpecialtiesDoctor","Back","goBack"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, ChangeEvent, KeyboardEvent } from \"react\";\nimport { Button, Form, Col, Row, Alert } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport InputMask from \"react-input-mask\";\n\nimport * as Yup from \"yup\";\n\nimport api from \"../../../services/api\";\n\nimport \"./index.css\";\n\nvar SpecialtiesSelect: any;\nvar Specialties;\n//inferces para facilitar a manipulação dos dados\ninterface IDoctor {\n  id: string;\n  nome: string;\n  crm: number;\n  telFixo: number;\n  telCelular: number;\n}\n\ntype OptionType = {\n  value: string;\n  label: string;\n};\ninterface ISpecialtiesDoctor {\n  id_doctor: string;\n  id_specialties: string;\n}\n\ninterface IAdress {\n  id: string;\n  cep: string;\n  logradouro: string;\n  complemento: string;\n  bairro: string;\n  localidade: string;\n  id_doctor: string;\n  uf: string;\n}\n\ninterface Icep {\n  cep: string;\n}\n\nconst listSpecialties = [\n  \"Alergologia\",\n  \"Angiologia\",\n  \"Buco maxilo\",\n  \"Cardiologia clínca\",\n  \"Cardiologia infantil\",\n  \"Cirurgia cabeça e pescoço\",\n  \"Cirurgia cardíaca\",\n  \"Cirurgia de tórax\",\n];\n\n//dados para o dropdowns\nconst SpecialtiesOptions: OptionType[] = [\n  { value: \"Alergologia\", label: \"Alergologia\" },\n  { value: \"Angiologia\", label: \"Angiologia\" },\n  { value: \"Buco maxilo\", label: \"Buco maxilo\" },\n  { value: \"Cardiologia clínca\", label: \"Cardiologia clínca\" },\n  { value: \"Cardiologia infantil\", label: \"Cardiologia infantil\" },\n  { value: \"Cirurgia cabeça e pescoço\", label: \"Cirurgia cabeça e pescoço\" },\n  { value: \"Cirurgia cardíaca\", label: \"Cirurgia cardíaca\" },\n  { value: \"Cirurgia de tórax\", label: \"Cirurgia de tórax\" },\n];\n\n//REACT\nconst Doctors: React.FC = () => {\n  useEffect(() => {\n    loadSpecialties();\n  });\n\n  const history = useHistory();\n\n  //useState\n  const [cep, setCep] = useState<Icep>({\n    cep: \"\",\n  });\n\n  const [specialtiesDoctor, setSpecialtiesDoctor] =\n    useState<ISpecialtiesDoctor>({\n      id_doctor: \"\",\n      id_specialties: \"\",\n    });\n\n  const [adress, setAdress] = useState<IAdress>({\n    id: \"\",\n    cep: \"\",\n    logradouro: \"\",\n    complemento: \"\",\n    bairro: \"\",\n    localidade: \"\",\n    id_doctor: \"\",\n    uf: \"\",\n  });\n\n  const [doctor, setDoctor] = useState<IDoctor>({\n    id: \"\",\n    nome: \"\",\n    crm: 0,\n    telFixo: 0,\n    telCelular: 0,\n  });\n\n  //cadastra especialidades no banco se não existirem\n  async function loadSpecialties() {\n    const getSpecialties = await api.get(\"/Specialties\");\n\n    if (getSpecialties.data.length == 0) {\n      listSpecialties.forEach((index) => {\n        registerSpecialties(index);\n      });\n    }\n\n    // SpecialtiesSelect = getSpecialties.data;\n  }\n\n  async function registerSpecialties(specialties: string) {\n    const responseSpecialties = await api.post(\"Specialties\", {\n      name: specialties,\n    });\n  }\n\n  //funcao responsavel por consultar o cep\n  async function GetCep(this: any, e: ChangeEvent<HTMLInputElement>) {\n    setCep({\n      ...cep, //garante que o input só recebera numeros\n      [e.target.name]: e.target.value.replace(/\\D/g, \"\"),\n    });\n    let lengthCep = e.target.value.replace(/\\D/g, \"\").length;\n    let cepNumber = e.target.value.replace(/\\D/g, \"\");\n\n    //valida se o usuario digitou os 8 digitos cep para poder fazer a requisicao\n    if (lengthCep == 8) {\n      const resp = await api.post(\"/CEP/\" + cepNumber + \"\");\n\n      setAdress({\n        id: \"\",\n        cep: resp.data.cep == undefined ? \"\" : resp.data.cep,\n        logradouro:\n          resp.data.logradouro == undefined ? \"\" : resp.data.logradouro,\n        complemento:\n          resp.data.complemento == undefined ? \"\" : resp.data.complemento,\n        bairro: resp.data.bairro == undefined ? \"\" : resp.data.bairro,\n        localidade:\n          resp.data.localidade == undefined ? \"\" : resp.data.localidade,\n        uf: resp.data.uf == undefined ? \"\" : resp.data.uf,\n        id_doctor: \"\",\n      });\n    }\n  }\n\n  function UpdatedSpecialties(e: any) {\n    SpecialtiesSelect = e;\n  }\n  function UpdatedDoctor(e: ChangeEvent<HTMLInputElement>) {\n    setDoctor({\n      ...doctor,\n      [e.target.name]: e.target.value,\n    });\n  }\n  function UpdatedAdress(e: ChangeEvent<HTMLInputElement>) {\n    setAdress({\n      ...adress,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    let numberCel = doctor.telCelular\n      .toString()\n      .replaceAll(\"(\", \"\")\n      .replace(\")\", \"\")\n      .replace(\"-\", \"\");\n    let numberFix = doctor.telFixo\n      .toString()\n      .replace(\"(\", \"\")\n      .replace(\")\", \"\")\n      .replace(\"-\", \"\");\n\n    doctor.telCelular = parseInt(numberCel);\n    doctor.telFixo = parseInt(numberFix);\n\n    const respDoctor = await api.post(\"/InfoDoctors\", doctor);\n    // console.log(respDoctor);\n    adress.id_doctor = respDoctor.data.id;\n    const respAdress = await api.post(\"/Adress\", adress);\n    console.log(respAdress);\n\n    var arraySpecialties: any[] = [];\n    const respSpecialties = await api.get(\"/Specialties\");\n\n    console.log(SpecialtiesSelect);\n    SpecialtiesSelect.forEach((index: any) => {\n      arraySpecialties.push(\n        respSpecialties.data.filter(\n          (s: { name: string }) => s.name === index.value\n        )\n      );\n    });\n\n    await Promise.all(\n      arraySpecialties.map(async (elem) => {\n       \n       set\n        let id_specialties = elem[0].id;\n        let id_doctor = respDoctor.data.id;\n      \n       \n\n        const respSpecialtiesDoctor = await api.post(\n          \"/InfoDoctorsSpecialties\",\n          {\n            id_specialties: id_specialties,\n            id_doctor: id_doctor,\n          }\n        );\n        //  console.log(respSpecialtiesDoctor)\n      })\n    );\n  }\n\n  function Back() {\n    history.goBack();\n  }\n\n  return (\n    <div className=\"container\">\n      <br />\n      <div className=\"Header-doctors\">\n        <h1>Cadastro</h1>\n        <Button variant=\"dark\" size=\"sm\" onClick={Back}>\n          Voltar\n        </Button>\n      </div>\n      <br />\n      <div className=\"container\">\n        <Form onSubmit={onSubmit}>\n          <Form.Group>\n            <Form.Label>Nome</Form.Label>\n            <Form.Control\n              maxLength={120}\n              type=\"text\"\n              name=\"nome\"\n              onChange={(e: ChangeEvent<HTMLInputElement>) => UpdatedDoctor(e)}\n            />\n          </Form.Group>\n          <br />\n          <Form.Group>\n            <Row>\n              <Col>\n                <Form.Label>Tel. Celular</Form.Label>\n                <InputMask\n                  placeholder=\"(81)88888-8888\"\n                  className=\"phone\"\n                  name=\"telCelular\"\n                  mask=\"(99)999999-9999\"\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedDoctor(e)\n                  }\n                />\n              </Col>\n              <Col>\n                <Form.Label>Tel. Fixo</Form.Label>\n                <InputMask\n                  placeholder=\"(81)88888-8888\"\n                  className=\"phone\"\n                  name=\"telFixo\"\n                  mask=\"(99)999999-9999\"\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedDoctor(e)\n                  }\n                />\n              </Col>\n              <Col>\n                <Form.Label>CRM</Form.Label>\n                <Form.Control\n                  maxLength={7}\n                  type=\"text\"\n                  name=\"crm\"\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedDoctor(e)\n                  }\n                />\n              </Col>\n            </Row>\n            <br />\n            <Form.Label>Especialidades</Form.Label>\n            <Select\n              isMulti\n              name=\"specialties\"\n              options={SpecialtiesOptions}\n              className=\"basic-multi-select\"\n              classNamePrefix=\"Selecione\"\n              placeholder=\"Selecione\"\n              onChange={(e: any) => UpdatedSpecialties(e)}\n            />\n          </Form.Group>\n          <br />\n          <h3>Cadastro de Endereço</h3>\n\n          <Form.Group>\n            <Row>\n              <Col>\n                <Form.Label>CEP</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"cep\"\n                  maxLength={8}\n                  placeholder=\"Digite o CEP\"\n                  value={cep.cep}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) => GetCep(e)}\n                />\n              </Col>\n              <Col>\n                <Form.Label>Cidade</Form.Label>\n                <Form.Control\n                  placeholder=\"\"\n                  type=\"text\"\n                  name=\"localidade\"\n                  value={adress.localidade}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedAdress(e)\n                  }\n                />\n              </Col>\n              <Col>\n                <Form.Label>Estado</Form.Label>\n                <Form.Control\n                  placeholder=\"\"\n                  type=\"text\"\n                  name=\"uf\"\n                  value={adress.uf}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedAdress(e)\n                  }\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Label>Logradouro</Form.Label>\n                <Form.Control\n                  placeholder=\"\"\n                  type=\"text\"\n                  name=\"logradouro\"\n                  value={adress.logradouro}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedAdress(e)\n                  }\n                />\n              </Col>\n              <Col>\n                <Form.Label>Bairro</Form.Label>\n                <Form.Control\n                  placeholder=\"\"\n                  type=\"text\"\n                  name=\"bairro\"\n                  value={adress.bairro}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedAdress(e)\n                  }\n                />\n              </Col>\n              <Col>\n                <Form.Label>Complemento</Form.Label>\n                <Form.Control\n                  placeholder=\"\"\n                  type=\"text\"\n                  name=\"complemento\"\n                  value={adress.complemento}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedAdress(e)\n                  }\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <br />\n          <Button variant=\"dark\" type=\"submit\">\n            Salvar\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Doctors;\n"]},"metadata":{},"sourceType":"module"}