{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.maskPhoneNumber = void 0;\n\nconst google_libphonenumber_1 = require(\"google-libphonenumber\");\n\nconst PhoneUtil = google_libphonenumber_1.PhoneNumberUtil.getInstance();\n\nconst format = phoneNumber => {\n  const cleaned = phoneNumber.startsWith(\"00\") ? phoneNumber.replace(\"00\", \"+\") : phoneNumber;\n  const formatted = PhoneUtil.parseAndKeepRawInput(cleaned);\n  return PhoneUtil.format(formatted, google_libphonenumber_1.PhoneNumberFormat.E164);\n};\n/**\n * would throw an error if the provided number is invalid\n * @param phoneNumber a valid mobile number\n */\n\n\nconst maskPhoneNumber = phoneNumber => {\n  const formatted = format(phoneNumber);\n  const masked = formatted.replace(/[\\w\\W]/g, \"*\");\n  return `${masked.substr(0, formatted.length - 4)}${formatted.substr(formatted.length - 4)}`;\n};\n\nexports.maskPhoneNumber = maskPhoneNumber;","map":{"version":3,"sources":["/Users/effetive/Documents/React-APP/template-gcb/node_modules/mask-phone-number/dist/src/index.js"],"names":["Object","defineProperty","exports","value","maskPhoneNumber","google_libphonenumber_1","require","PhoneUtil","PhoneNumberUtil","getInstance","format","phoneNumber","cleaned","startsWith","replace","formatted","parseAndKeepRawInput","PhoneNumberFormat","E164","masked","substr","length"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;;AACA,MAAMC,uBAAuB,GAAGC,OAAO,CAAC,uBAAD,CAAvC;;AACA,MAAMC,SAAS,GAAGF,uBAAuB,CAACG,eAAxB,CAAwCC,WAAxC,EAAlB;;AACA,MAAMC,MAAM,GAAIC,WAAD,IAAiB;AAC5B,QAAMC,OAAO,GAAGD,WAAW,CAACE,UAAZ,CAAuB,IAAvB,IAA+BF,WAAW,CAACG,OAAZ,CAAoB,IAApB,EAA0B,GAA1B,CAA/B,GAAgEH,WAAhF;AACA,QAAMI,SAAS,GAAGR,SAAS,CAACS,oBAAV,CAA+BJ,OAA/B,CAAlB;AACA,SAAOL,SAAS,CAACG,MAAV,CAAiBK,SAAjB,EAA4BV,uBAAuB,CAACY,iBAAxB,CAA0CC,IAAtE,CAAP;AACH,CAJD;AAKA;AACA;AACA;AACA;;;AACA,MAAMd,eAAe,GAAIO,WAAD,IAAiB;AACrC,QAAMI,SAAS,GAAGL,MAAM,CAACC,WAAD,CAAxB;AACA,QAAMQ,MAAM,GAAGJ,SAAS,CAACD,OAAV,CAAkB,SAAlB,EAA6B,GAA7B,CAAf;AACA,SAAQ,GAAEK,MAAM,CAACC,MAAP,CAAc,CAAd,EAAiBL,SAAS,CAACM,MAAV,GAAmB,CAApC,CAAuC,GAAEN,SAAS,CAACK,MAAV,CAAiBL,SAAS,CAACM,MAAV,GAAmB,CAApC,CAAuC,EAA1F;AACH,CAJD;;AAKAnB,OAAO,CAACE,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.maskPhoneNumber = void 0;\nconst google_libphonenumber_1 = require(\"google-libphonenumber\");\nconst PhoneUtil = google_libphonenumber_1.PhoneNumberUtil.getInstance();\nconst format = (phoneNumber) => {\n    const cleaned = phoneNumber.startsWith(\"00\") ? phoneNumber.replace(\"00\", \"+\") : phoneNumber;\n    const formatted = PhoneUtil.parseAndKeepRawInput(cleaned);\n    return PhoneUtil.format(formatted, google_libphonenumber_1.PhoneNumberFormat.E164);\n};\n/**\n * would throw an error if the provided number is invalid\n * @param phoneNumber a valid mobile number\n */\nconst maskPhoneNumber = (phoneNumber) => {\n    const formatted = format(phoneNumber);\n    const masked = formatted.replace(/[\\w\\W]/g, \"*\");\n    return `${masked.substr(0, formatted.length - 4)}${formatted.substr(formatted.length - 4)}`;\n};\nexports.maskPhoneNumber = maskPhoneNumber;\n"]},"metadata":{},"sourceType":"script"}