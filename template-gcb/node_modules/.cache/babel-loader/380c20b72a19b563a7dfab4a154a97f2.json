{"ast":null,"code":"var _jsxFileName = \"/Users/effetive/Documents/React-APP/template-gcb/src/pages/doctors/Form/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Form, Col, Row } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport InputMask from \"react-input-mask\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\nimport api from \"../../../services/api\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  nome: Yup.string().required(\"Fullname is required\"),\n  username: Yup.string().required(\"Username is required\").min(6, \"Username must be at least 6 characters\").max(20, \"Username must not exceed 20 characters\"),\n  email: Yup.string().required(\"Email is required\").email(\"Email is invalid\"),\n  password: Yup.string().required(\"Password is required\").min(6, \"Password must be at least 6 characters\").max(40, \"Password must not exceed 40 characters\"),\n  confirmPassword: Yup.string().required(\"Confirm Password is required\").oneOf([Yup.ref(\"password\"), null], \"Confirm Password does not match\"),\n  acceptTerms: Yup.bool().oneOf([true], \"Accept Terms is required\")\n});\nconst {\n  register,\n  handleSubmit,\n  reset,\n  formState: {\n    errors\n  }\n} = useForm({\n  resolver: yupResolver(validationSchema)\n}); //inferces para facilitar a manipulação dos dados\n\nconst listSpecialties = [\"Alergologia\", \"Angiologia\", \"Buco maxilo\", \"Cardiologia clínca\", \"Cardiologia infantil\", \"Cirurgia cabeça e pescoço\", \"Cirurgia cardíaca\", \"Cirurgia de tórax\"]; //dados para o dropdowns\n\nconst SpecialtiesOptions = [{\n  value: \"Alergologia\",\n  label: \"Alergologia\"\n}, {\n  value: \"Angiologia\",\n  label: \"Angiologia\"\n}, {\n  value: \"Buco maxilo\",\n  label: \"Buco maxilo\"\n}, {\n  value: \"Cardiologia clínca\",\n  label: \"Cardiologia clínca\"\n}, {\n  value: \"Cardiologia infantil\",\n  label: \"Cardiologia infantil\"\n}, {\n  value: \"Cirurgia cabeça e pescoço\",\n  label: \"Cirurgia cabeça e pescoço\"\n}, {\n  value: \"Cirurgia cardíaca\",\n  label: \"Cirurgia cardíaca\"\n}, {\n  value: \"Cirurgia de tórax\",\n  label: \"Cirurgia de tórax\"\n}]; //REACT\n\nconst Doctors = () => {\n  _s();\n\n  var SpecialtiesSelect;\n  useEffect(() => {\n    loadSpecialties();\n  });\n  const history = useHistory(); //useState\n\n  const [valid, setValid] = useState({\n    NameDoctorExist: false\n  });\n  const [cep, setCep] = useState({\n    cep: \"\"\n  });\n  const [adress, setAdress] = useState({\n    id: \"\",\n    cepForm: \"\",\n    logradouro: \"\",\n    complemento: \"\",\n    bairro: \"\",\n    localidade: \"\",\n    uf: \"\"\n  });\n  const [doctor, setDoctor] = useState({\n    id: \"\",\n    nome: \"\",\n    crm: 0,\n    telFixo: 0,\n    telCelular: 0\n  }); //cadastra especialidades no banco se não existirem\n\n  async function loadSpecialties() {\n    const getSpecialties = await api.get(\"/Specialties\");\n\n    if (getSpecialties.data.length == 0) {\n      listSpecialties.forEach(index => {\n        registerSpecialties(index);\n      });\n    }\n\n    SpecialtiesSelect = getSpecialties.data;\n  }\n\n  async function registerSpecialties(specialties) {\n    const responseSpecialties = await api.post(\"Specialties\", {\n      name: specialties\n    });\n  } //funcao responsavel por consultar o cep\n\n\n  async function GetCep(e) {\n    setCep({ ...cep,\n      //garante que o input só recebera numeros\n      [e.target.name]: e.target.value.replace(/\\D/g, \"\")\n    });\n    let lengthCep = e.target.value.replace(/\\D/g, \"\").length;\n    let cepNumber = e.target.value.replace(/\\D/g, \"\"); //valida se o usuario digitou os 8 digitos cep para poder fazer a requisicao\n\n    if (lengthCep == 8) {\n      const resp = await api.post(\"/CEP/\" + cepNumber + \"\");\n      setAdress({\n        id: \"\",\n        cepForm: resp.data.cep == undefined ? \"\" : resp.data.cep,\n        logradouro: resp.data.logradouro == undefined ? \"\" : resp.data.logradouro,\n        complemento: resp.data.complemento == undefined ? \"\" : resp.data.complemento,\n        bairro: resp.data.bairro == undefined ? \"\" : resp.data.bairro,\n        localidade: resp.data.localidade == undefined ? \"\" : resp.data.localidade,\n        uf: resp.data.uf == undefined ? \"\" : resp.data.uf\n      });\n    }\n  }\n\n  function UpdatedSpecialties(e) {}\n\n  function UpdatedDoctor(e) {\n    setDoctor({ ...doctor,\n      [e.target.name]: e.target.value\n    });\n\n    if (e.target.name == \"telCelular\") {\n      var lenghtCel = e.target.value.length;\n    }\n  }\n\n  function UpdatedAdress(e) {\n    setAdress({ ...adress,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  function Validfields() {\n    console.log(document.getElementById(\"NameLabel\"));\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    Validfields(); //const respDoctor = await api.post(\"/InfoDoctors\", doctor);\n    //    const respAdress = await api.post('/Adress',adress)\n  }\n\n  function Back() {\n    history.goBack();\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header-doctors\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        size: \"sm\",\n        onClick: Back,\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            maxLength: 120,\n            type: \"text\",\n            ...register('nome'),\n            className: `form-control ${erros.fullname}`,\n            name: \"nome\",\n            onChange: e => UpdatedDoctor(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          id: \"NameLabel\",\n          children: \"Vazio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Tel. Celular\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n                placeholder: \"(81)88888-8888\",\n                className: \"phone\",\n                name: \"telCelular\",\n                mask: \"(99)999999-9999\",\n                onChange: e => UpdatedDoctor(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Tel. Fixo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(InputMask, {\n                placeholder: \"(81)88888-8888\",\n                className: \"phone\",\n                name: \"telFixo\",\n                mask: \"(99)999999-9999\",\n                onChange: e => UpdatedDoctor(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"CRM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                maxLength: 7,\n                type: \"text\",\n                name: \"crm\",\n                onChange: e => UpdatedDoctor(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Especialidades\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            isMulti: true,\n            name: \"specialties\",\n            options: SpecialtiesOptions,\n            className: \"basic-multi-select\",\n            classNamePrefix: \"Selecione\",\n            onChange: e => UpdatedSpecialties(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Cadastro de Endere\\xE7o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"CEP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                name: \"cep\",\n                maxLength: 8,\n                placeholder: \"Digite o CEP\",\n                value: cep.cep,\n                onChange: e => GetCep(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Cidade\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"\",\n                type: \"text\",\n                name: \"localidade\",\n                value: adress.localidade,\n                onChange: e => UpdatedAdress(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Estado\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"\",\n                type: \"text\",\n                name: \"uf\",\n                value: adress.uf,\n                onChange: e => UpdatedAdress(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Logradouro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"\",\n                type: \"text\",\n                name: \"logradouro\",\n                value: adress.logradouro,\n                onChange: e => UpdatedAdress(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Bairro\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"\",\n                type: \"text\",\n                name: \"bairro\",\n                value: adress.bairro,\n                onChange: e => UpdatedAdress(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Complemento\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"\",\n                type: \"text\",\n                name: \"uf\",\n                value: adress.complemento,\n                onChange: e => UpdatedAdress(e)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          type: \"submit\",\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Doctors, \"4cHJnKVq/yC/fmjr1SeBmh3VLOY=\", false, function () {\n  return [useHistory];\n});\n\n_c = Doctors;\nexport default Doctors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Doctors\");","map":{"version":3,"sources":["/Users/effetive/Documents/React-APP/template-gcb/src/pages/doctors/Form/index.tsx"],"names":["React","useState","useEffect","Button","Form","Col","Row","useHistory","Select","InputMask","useForm","yupResolver","Yup","api","validationSchema","object","shape","nome","string","required","username","min","max","email","password","confirmPassword","oneOf","ref","acceptTerms","bool","register","handleSubmit","reset","formState","errors","resolver","listSpecialties","SpecialtiesOptions","value","label","Doctors","SpecialtiesSelect","loadSpecialties","history","valid","setValid","NameDoctorExist","cep","setCep","adress","setAdress","id","cepForm","logradouro","complemento","bairro","localidade","uf","doctor","setDoctor","crm","telFixo","telCelular","getSpecialties","get","data","length","forEach","index","registerSpecialties","specialties","responseSpecialties","post","name","GetCep","e","target","replace","lengthCep","cepNumber","resp","undefined","UpdatedSpecialties","UpdatedDoctor","lenghtCel","UpdatedAdress","Validfields","console","log","document","getElementById","onSubmit","preventDefault","Back","goBack","erros","fullname"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAAuE,OAAvE;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,GAA5B,QAA8C,iBAA9C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAEA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,OAAO,aAAP;;AAEA,MAAMC,gBAAgB,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AAC1CC,EAAAA,IAAI,EAAEL,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,CADoC;AAE1CC,EAAAA,QAAQ,EAAER,GAAG,CAACM,MAAJ,GACPC,QADO,CACE,sBADF,EAEPE,GAFO,CAEH,CAFG,EAEA,wCAFA,EAGPC,GAHO,CAGH,EAHG,EAGC,wCAHD,CAFgC;AAM1CC,EAAAA,KAAK,EAAEX,GAAG,CAACM,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,EAA2CI,KAA3C,CAAiD,kBAAjD,CANmC;AAO1CC,EAAAA,QAAQ,EAAEZ,GAAG,CAACM,MAAJ,GACPC,QADO,CACE,sBADF,EAEPE,GAFO,CAEH,CAFG,EAEA,wCAFA,EAGPC,GAHO,CAGH,EAHG,EAGC,wCAHD,CAPgC;AAW1CG,EAAAA,eAAe,EAAEb,GAAG,CAACM,MAAJ,GACdC,QADc,CACL,8BADK,EAEdO,KAFc,CAER,CAACd,GAAG,CAACe,GAAJ,CAAQ,UAAR,CAAD,EAAsB,IAAtB,CAFQ,EAEqB,iCAFrB,CAXyB;AAc1CC,EAAAA,WAAW,EAAEhB,GAAG,CAACiB,IAAJ,GAAWH,KAAX,CAAiB,CAAC,IAAD,CAAjB,EAAyB,0BAAzB;AAd6B,CAAnB,CAAzB;AAiBA,MAAM;AACJI,EAAAA,QADI;AAEJC,EAAAA,YAFI;AAGJC,EAAAA,KAHI;AAIJC,EAAAA,SAAS,EAAE;AAAEC,IAAAA;AAAF;AAJP,IAKFxB,OAAO,CAAU;AACnByB,EAAAA,QAAQ,EAAExB,WAAW,CAACG,gBAAD;AADF,CAAV,CALX,C,CASA;;AA+BA,MAAMsB,eAAe,GAAG,CACtB,aADsB,EAEtB,YAFsB,EAGtB,aAHsB,EAItB,oBAJsB,EAKtB,sBALsB,EAMtB,2BANsB,EAOtB,mBAPsB,EAQtB,mBARsB,CAAxB,C,CAWA;;AACA,MAAMC,kBAAgC,GAAG,CACvC;AAAEC,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,KAAK,EAAE;AAA/B,CADuC,EAEvC;AAAED,EAAAA,KAAK,EAAE,YAAT;AAAuBC,EAAAA,KAAK,EAAE;AAA9B,CAFuC,EAGvC;AAAED,EAAAA,KAAK,EAAE,aAAT;AAAwBC,EAAAA,KAAK,EAAE;AAA/B,CAHuC,EAIvC;AAAED,EAAAA,KAAK,EAAE,oBAAT;AAA+BC,EAAAA,KAAK,EAAE;AAAtC,CAJuC,EAKvC;AAAED,EAAAA,KAAK,EAAE,sBAAT;AAAiCC,EAAAA,KAAK,EAAE;AAAxC,CALuC,EAMvC;AAAED,EAAAA,KAAK,EAAE,2BAAT;AAAsCC,EAAAA,KAAK,EAAE;AAA7C,CANuC,EAOvC;AAAED,EAAAA,KAAK,EAAE,mBAAT;AAA8BC,EAAAA,KAAK,EAAE;AAArC,CAPuC,EAQvC;AAAED,EAAAA,KAAK,EAAE,mBAAT;AAA8BC,EAAAA,KAAK,EAAE;AAArC,CARuC,CAAzC,C,CAWA;;AACA,MAAMC,OAAiB,GAAG,MAAM;AAAA;;AAC9B,MAAIC,iBAAJ;AACAvC,EAAAA,SAAS,CAAC,MAAM;AACdwC,IAAAA,eAAe;AAChB,GAFQ,CAAT;AAIA,QAAMC,OAAO,GAAGpC,UAAU,EAA1B,CAN8B,CAQ9B;;AACA,QAAM,CAACqC,KAAD,EAAQC,QAAR,IAAoB5C,QAAQ,CAAS;AACzC6C,IAAAA,eAAe,EAAE;AADwB,GAAT,CAAlC;AAIA,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgB/C,QAAQ,CAAO;AACnC8C,IAAAA,GAAG,EAAE;AAD8B,GAAP,CAA9B;AAIA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBjD,QAAQ,CAAU;AAC5CkD,IAAAA,EAAE,EAAE,EADwC;AAE5CC,IAAAA,OAAO,EAAE,EAFmC;AAG5CC,IAAAA,UAAU,EAAE,EAHgC;AAI5CC,IAAAA,WAAW,EAAE,EAJ+B;AAK5CC,IAAAA,MAAM,EAAE,EALoC;AAM5CC,IAAAA,UAAU,EAAE,EANgC;AAO5CC,IAAAA,EAAE,EAAE;AAPwC,GAAV,CAApC;AAUA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsB1D,QAAQ,CAAU;AAC5CkD,IAAAA,EAAE,EAAE,EADwC;AAE5ClC,IAAAA,IAAI,EAAE,EAFsC;AAG5C2C,IAAAA,GAAG,EAAE,CAHuC;AAI5CC,IAAAA,OAAO,EAAE,CAJmC;AAK5CC,IAAAA,UAAU,EAAE;AALgC,GAAV,CAApC,CA3B8B,CAmC9B;;AACA,iBAAepB,eAAf,GAAiC;AAC/B,UAAMqB,cAAc,GAAG,MAAMlD,GAAG,CAACmD,GAAJ,CAAQ,cAAR,CAA7B;;AAEA,QAAID,cAAc,CAACE,IAAf,CAAoBC,MAApB,IAA8B,CAAlC,EAAqC;AACnC9B,MAAAA,eAAe,CAAC+B,OAAhB,CAAyBC,KAAD,IAAW;AACjCC,QAAAA,mBAAmB,CAACD,KAAD,CAAnB;AACD,OAFD;AAGD;;AAED3B,IAAAA,iBAAiB,GAAGsB,cAAc,CAACE,IAAnC;AACD;;AAED,iBAAeI,mBAAf,CAAmCC,WAAnC,EAAwD;AACtD,UAAMC,mBAAmB,GAAG,MAAM1D,GAAG,CAAC2D,IAAJ,CAAS,aAAT,EAAwB;AACxDC,MAAAA,IAAI,EAAEH;AADkD,KAAxB,CAAlC;AAGD,GApD6B,CAsD9B;;;AACA,iBAAeI,MAAf,CAAiCC,CAAjC,EAAmE;AACjE3B,IAAAA,MAAM,CAAC,EACL,GAAGD,GADE;AACG;AACR,OAAC4B,CAAC,CAACC,MAAF,CAASH,IAAV,GAAiBE,CAAC,CAACC,MAAF,CAAStC,KAAT,CAAeuC,OAAf,CAAuB,KAAvB,EAA8B,EAA9B;AAFZ,KAAD,CAAN;AAIA,QAAIC,SAAS,GAAGH,CAAC,CAACC,MAAF,CAAStC,KAAT,CAAeuC,OAAf,CAAuB,KAAvB,EAA8B,EAA9B,EAAkCX,MAAlD;AACA,QAAIa,SAAS,GAAGJ,CAAC,CAACC,MAAF,CAAStC,KAAT,CAAeuC,OAAf,CAAuB,KAAvB,EAA8B,EAA9B,CAAhB,CANiE,CAQjE;;AACA,QAAIC,SAAS,IAAI,CAAjB,EAAoB;AAClB,YAAME,IAAI,GAAG,MAAMnE,GAAG,CAAC2D,IAAJ,CAAS,UAAUO,SAAV,GAAsB,EAA/B,CAAnB;AAEA7B,MAAAA,SAAS,CAAC;AACRC,QAAAA,EAAE,EAAE,EADI;AAERC,QAAAA,OAAO,EAAE4B,IAAI,CAACf,IAAL,CAAUlB,GAAV,IAAiBkC,SAAjB,GAA6B,EAA7B,GAAkCD,IAAI,CAACf,IAAL,CAAUlB,GAF7C;AAGRM,QAAAA,UAAU,EACR2B,IAAI,CAACf,IAAL,CAAUZ,UAAV,IAAwB4B,SAAxB,GAAoC,EAApC,GAAyCD,IAAI,CAACf,IAAL,CAAUZ,UAJ7C;AAKRC,QAAAA,WAAW,EACT0B,IAAI,CAACf,IAAL,CAAUX,WAAV,IAAyB2B,SAAzB,GAAqC,EAArC,GAA0CD,IAAI,CAACf,IAAL,CAAUX,WAN9C;AAORC,QAAAA,MAAM,EAAEyB,IAAI,CAACf,IAAL,CAAUV,MAAV,IAAoB0B,SAApB,GAAgC,EAAhC,GAAqCD,IAAI,CAACf,IAAL,CAAUV,MAP/C;AAQRC,QAAAA,UAAU,EACRwB,IAAI,CAACf,IAAL,CAAUT,UAAV,IAAwByB,SAAxB,GAAoC,EAApC,GAAyCD,IAAI,CAACf,IAAL,CAAUT,UAT7C;AAURC,QAAAA,EAAE,EAAEuB,IAAI,CAACf,IAAL,CAAUR,EAAV,IAAgBwB,SAAhB,GAA4B,EAA5B,GAAiCD,IAAI,CAACf,IAAL,CAAUR;AAVvC,OAAD,CAAT;AAYD;AACF;;AAED,WAASyB,kBAAT,CAA4BP,CAA5B,EAAoC,CAAE;;AACtC,WAASQ,aAAT,CAAuBR,CAAvB,EAAyD;AACvDhB,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACiB,CAAC,CAACC,MAAF,CAASH,IAAV,GAAiBE,CAAC,CAACC,MAAF,CAAStC;AAFlB,KAAD,CAAT;;AAKA,QAAIqC,CAAC,CAACC,MAAF,CAASH,IAAT,IAAiB,YAArB,EAAmC;AACjC,UAAIW,SAAS,GAAGT,CAAC,CAACC,MAAF,CAAStC,KAAT,CAAe4B,MAA/B;AACD;AACF;;AACD,WAASmB,aAAT,CAAuBV,CAAvB,EAAyD;AACvDzB,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAAC0B,CAAC,CAACC,MAAF,CAASH,IAAV,GAAiBE,CAAC,CAACC,MAAF,CAAStC;AAFlB,KAAD,CAAT;AAID;;AAED,WAASgD,WAAT,GAAuB;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAZ;AACD;;AAED,iBAAeC,QAAf,CAAwBhB,CAAxB,EAAyD;AACvDA,IAAAA,CAAC,CAACiB,cAAF;AAEAN,IAAAA,WAAW,GAH4C,CAKvD;AAEA;AACD;;AAED,WAASO,IAAT,GAAgB;AACdlD,IAAAA,OAAO,CAACmD,MAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,MAAhB;AAAuB,QAAA,IAAI,EAAC,IAA5B;AAAiC,QAAA,OAAO,EAAED,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAEF,QAAhB;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,SAAS,EAAE,GADb;AAEE,YAAA,IAAI,EAAC,MAFP;AAAA,eAGM7D,QAAQ,CAAC,MAAD,CAHd;AAIE,YAAA,SAAS,EAAG,gBAAeiE,KAAK,CAACC,QAAS,EAJ5C;AAKE,YAAA,IAAI,EAAC,MALP;AAME,YAAA,QAAQ,EAAGrB,CAAD,IAAsCQ,aAAa,CAACR,CAAD;AAN/D;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE;AAAA;AAAA;AAAA;AAAA,gBAbF,eAcE,QAAC,IAAD,CAAM,KAAN;AAAA,kCACE,QAAC,GAAD;AAAA,oCACE,QAAC,GAAD;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AACE,gBAAA,WAAW,EAAC,gBADd;AAEE,gBAAA,SAAS,EAAC,OAFZ;AAGE,gBAAA,IAAI,EAAC,YAHP;AAIE,gBAAA,IAAI,EAAC,iBAJP;AAKE,gBAAA,QAAQ,EAAGA,CAAD,IACRQ,aAAa,CAACR,CAAD;AANjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAaE,QAAC,GAAD;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AACE,gBAAA,WAAW,EAAC,gBADd;AAEE,gBAAA,SAAS,EAAC,OAFZ;AAGE,gBAAA,IAAI,EAAC,SAHP;AAIE,gBAAA,IAAI,EAAC,iBAJP;AAKE,gBAAA,QAAQ,EAAGA,CAAD,IACRQ,aAAa,CAACR,CAAD;AANjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,eAyBE,QAAC,GAAD;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,SAAS,EAAE,CADb;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,IAAI,EAAC,KAHP;AAIE,gBAAA,QAAQ,EAAGA,CAAD,IACRQ,aAAa,CAACR,CAAD;AALjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAsCE;AAAA;AAAA;AAAA;AAAA,kBAtCF,eAuCE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAvCF,eAwCE,QAAC,MAAD;AACE,YAAA,OAAO,MADT;AAEE,YAAA,IAAI,EAAC,aAFP;AAGE,YAAA,OAAO,EAAEtC,kBAHX;AAIE,YAAA,SAAS,EAAC,oBAJZ;AAKE,YAAA,eAAe,EAAC,WALlB;AAME,YAAA,QAAQ,EAAGsC,CAAD,IAAYO,kBAAkB,CAACP,CAAD;AAN1C;AAAA;AAAA;AAAA;AAAA,kBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,eA+DE;AAAA;AAAA;AAAA;AAAA,gBA/DF,eAgEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhEF,eAkEE,QAAC,IAAD,CAAM,KAAN;AAAA,kCACE,QAAC,GAAD;AAAA,oCACE,QAAC,GAAD;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,IAAI,EAAC,KAFP;AAGE,gBAAA,SAAS,EAAE,CAHb;AAIE,gBAAA,WAAW,EAAC,cAJd;AAKE,gBAAA,KAAK,EAAE5B,GAAG,CAACA,GALb;AAME,gBAAA,QAAQ,EAAG4B,CAAD,IAAsCD,MAAM,CAACC,CAAD;AANxD;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAYE,QAAC,GAAD;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,WAAW,EAAC,EADd;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,IAAI,EAAC,YAHP;AAIE,gBAAA,KAAK,EAAE1B,MAAM,CAACO,UAJhB;AAKE,gBAAA,QAAQ,EAAGmB,CAAD,IACRU,aAAa,CAACV,CAAD;AANjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,eAwBE,QAAC,GAAD;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,WAAW,EAAC,EADd;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,IAAI,EAAC,IAHP;AAIE,gBAAA,KAAK,EAAE1B,MAAM,CAACQ,EAJhB;AAKE,gBAAA,QAAQ,EAAGkB,CAAD,IACRU,aAAa,CAACV,CAAD;AANjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAsCE,QAAC,GAAD;AAAA,oCACE,QAAC,GAAD;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,WAAW,EAAC,EADd;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,IAAI,EAAC,YAHP;AAIE,gBAAA,KAAK,EAAE1B,MAAM,CAACI,UAJhB;AAKE,gBAAA,QAAQ,EAAGsB,CAAD,IACRU,aAAa,CAACV,CAAD;AANjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAaE,QAAC,GAAD;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,WAAW,EAAC,EADd;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,IAAI,EAAC,QAHP;AAIE,gBAAA,KAAK,EAAE1B,MAAM,CAACM,MAJhB;AAKE,gBAAA,QAAQ,EAAGoB,CAAD,IACRU,aAAa,CAACV,CAAD;AANjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF,eAyBE,QAAC,GAAD;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,WAAW,EAAC,EADd;AAEE,gBAAA,IAAI,EAAC,MAFP;AAGE,gBAAA,IAAI,EAAC,IAHP;AAIE,gBAAA,KAAK,EAAE1B,MAAM,CAACK,WAJhB;AAKE,gBAAA,QAAQ,EAAGqB,CAAD,IACRU,aAAa,CAACV,CAAD;AANjB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtCF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlEF,eA+IE;AAAA;AAAA;AAAA;AAAA,gBA/IF,eAgJE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,MAAhB;AAAuB,UAAA,IAAI,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkKD,CAxRD;;GAAMnC,O;UAMYjC,U;;;KANZiC,O;AA0RN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect, ChangeEvent, KeyboardEvent } from \"react\";\nimport { Button, Form, Col, Row, Alert } from \"react-bootstrap\";\nimport { useHistory } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport InputMask from \"react-input-mask\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as Yup from \"yup\";\n\nimport api from \"../../../services/api\";\n\nimport \"./index.css\";\n\nconst validationSchema = Yup.object().shape({\n  nome: Yup.string().required(\"Fullname is required\"),\n  username: Yup.string()\n    .required(\"Username is required\")\n    .min(6, \"Username must be at least 6 characters\")\n    .max(20, \"Username must not exceed 20 characters\"),\n  email: Yup.string().required(\"Email is required\").email(\"Email is invalid\"),\n  password: Yup.string()\n    .required(\"Password is required\")\n    .min(6, \"Password must be at least 6 characters\")\n    .max(40, \"Password must not exceed 40 characters\"),\n  confirmPassword: Yup.string()\n    .required(\"Confirm Password is required\")\n    .oneOf([Yup.ref(\"password\"), null], \"Confirm Password does not match\"),\n  acceptTerms: Yup.bool().oneOf([true], \"Accept Terms is required\"),\n});\n\nconst {\n  register,\n  handleSubmit,\n  reset,\n  formState: { errors },\n} = useForm<IDoctor>({\n  resolver: yupResolver(validationSchema),\n});\n\n//inferces para facilitar a manipulação dos dados\ninterface IDoctor {\n  id: string;\n  nome: string;\n  crm: number;\n  telFixo: number;\n  telCelular: number;\n}\n\ntype OptionType = {\n  value: string;\n  label: string;\n};\n\ninterface IAdress {\n  id: string;\n  cepForm: string;\n  logradouro: string;\n  complemento: string;\n  bairro: string;\n  localidade: string;\n  uf: string;\n}\n\ninterface Icep {\n  cep: string;\n}\n\ninterface IValid {\n  NameDoctorExist: Boolean;\n}\nconst listSpecialties = [\n  \"Alergologia\",\n  \"Angiologia\",\n  \"Buco maxilo\",\n  \"Cardiologia clínca\",\n  \"Cardiologia infantil\",\n  \"Cirurgia cabeça e pescoço\",\n  \"Cirurgia cardíaca\",\n  \"Cirurgia de tórax\",\n];\n\n//dados para o dropdowns\nconst SpecialtiesOptions: OptionType[] = [\n  { value: \"Alergologia\", label: \"Alergologia\" },\n  { value: \"Angiologia\", label: \"Angiologia\" },\n  { value: \"Buco maxilo\", label: \"Buco maxilo\" },\n  { value: \"Cardiologia clínca\", label: \"Cardiologia clínca\" },\n  { value: \"Cardiologia infantil\", label: \"Cardiologia infantil\" },\n  { value: \"Cirurgia cabeça e pescoço\", label: \"Cirurgia cabeça e pescoço\" },\n  { value: \"Cirurgia cardíaca\", label: \"Cirurgia cardíaca\" },\n  { value: \"Cirurgia de tórax\", label: \"Cirurgia de tórax\" },\n];\n\n//REACT\nconst Doctors: React.FC = () => {\n  var SpecialtiesSelect;\n  useEffect(() => {\n    loadSpecialties();\n  });\n\n  const history = useHistory();\n\n  //useState\n  const [valid, setValid] = useState<IValid>({\n    NameDoctorExist: false,\n  });\n\n  const [cep, setCep] = useState<Icep>({\n    cep: \"\",\n  });\n\n  const [adress, setAdress] = useState<IAdress>({\n    id: \"\",\n    cepForm: \"\",\n    logradouro: \"\",\n    complemento: \"\",\n    bairro: \"\",\n    localidade: \"\",\n    uf: \"\",\n  });\n\n  const [doctor, setDoctor] = useState<IDoctor>({\n    id: \"\",\n    nome: \"\",\n    crm: 0,\n    telFixo: 0,\n    telCelular: 0,\n  });\n\n  //cadastra especialidades no banco se não existirem\n  async function loadSpecialties() {\n    const getSpecialties = await api.get(\"/Specialties\");\n\n    if (getSpecialties.data.length == 0) {\n      listSpecialties.forEach((index) => {\n        registerSpecialties(index);\n      });\n    }\n\n    SpecialtiesSelect = getSpecialties.data;\n  }\n\n  async function registerSpecialties(specialties: string) {\n    const responseSpecialties = await api.post(\"Specialties\", {\n      name: specialties,\n    });\n  }\n\n  //funcao responsavel por consultar o cep\n  async function GetCep(this: any, e: ChangeEvent<HTMLInputElement>) {\n    setCep({\n      ...cep, //garante que o input só recebera numeros\n      [e.target.name]: e.target.value.replace(/\\D/g, \"\"),\n    });\n    let lengthCep = e.target.value.replace(/\\D/g, \"\").length;\n    let cepNumber = e.target.value.replace(/\\D/g, \"\");\n\n    //valida se o usuario digitou os 8 digitos cep para poder fazer a requisicao\n    if (lengthCep == 8) {\n      const resp = await api.post(\"/CEP/\" + cepNumber + \"\");\n\n      setAdress({\n        id: \"\",\n        cepForm: resp.data.cep == undefined ? \"\" : resp.data.cep,\n        logradouro:\n          resp.data.logradouro == undefined ? \"\" : resp.data.logradouro,\n        complemento:\n          resp.data.complemento == undefined ? \"\" : resp.data.complemento,\n        bairro: resp.data.bairro == undefined ? \"\" : resp.data.bairro,\n        localidade:\n          resp.data.localidade == undefined ? \"\" : resp.data.localidade,\n        uf: resp.data.uf == undefined ? \"\" : resp.data.uf,\n      });\n    }\n  }\n\n  function UpdatedSpecialties(e: any) {}\n  function UpdatedDoctor(e: ChangeEvent<HTMLInputElement>) {\n    setDoctor({\n      ...doctor,\n      [e.target.name]: e.target.value,\n    });\n\n    if (e.target.name == \"telCelular\") {\n      var lenghtCel = e.target.value.length;\n    }\n  }\n  function UpdatedAdress(e: ChangeEvent<HTMLInputElement>) {\n    setAdress({\n      ...adress,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  function Validfields() {\n    console.log(document.getElementById(\"NameLabel\"));\n  }\n\n  async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    Validfields();\n\n    //const respDoctor = await api.post(\"/InfoDoctors\", doctor);\n\n    //    const respAdress = await api.post('/Adress',adress)\n  }\n\n  function Back() {\n    history.goBack();\n  }\n\n  return (\n    <div className=\"container\">\n      <br />\n      <div className=\"Header-doctors\">\n        <h1>Cadastro</h1>\n        <Button variant=\"dark\" size=\"sm\" onClick={Back}>\n          Voltar\n        </Button>\n      </div>\n      <br />\n      <div className=\"container\">\n        <Form onSubmit={onSubmit}>\n          <Form.Group>\n            <Form.Label>Nome</Form.Label>\n            <Form.Control\n              maxLength={120}\n              type=\"text\"\n              {...register('nome')}\n              className={`form-control ${erros.fullname}`}\n              name=\"nome\"\n              onChange={(e: ChangeEvent<HTMLInputElement>) => UpdatedDoctor(e)}\n            />\n          </Form.Group>\n          <Form.Label id=\"NameLabel\">Vazio</Form.Label>\n          <br />\n          <Form.Group>\n            <Row>\n              <Col>\n                <Form.Label>Tel. Celular</Form.Label>\n                <InputMask\n                  placeholder=\"(81)88888-8888\"\n                  className=\"phone\"\n                  name=\"telCelular\"\n                  mask=\"(99)999999-9999\"\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedDoctor(e)\n                  }\n                />\n              </Col>\n              <Col>\n                <Form.Label>Tel. Fixo</Form.Label>\n                <InputMask\n                  placeholder=\"(81)88888-8888\"\n                  className=\"phone\"\n                  name=\"telFixo\"\n                  mask=\"(99)999999-9999\"\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedDoctor(e)\n                  }\n                />\n              </Col>\n              <Col>\n                <Form.Label>CRM</Form.Label>\n                <Form.Control\n                  maxLength={7}\n                  type=\"text\"\n                  name=\"crm\"\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedDoctor(e)\n                  }\n                />\n              </Col>\n            </Row>\n            <br />\n            <Form.Label>Especialidades</Form.Label>\n            <Select\n              isMulti\n              name=\"specialties\"\n              options={SpecialtiesOptions}\n              className=\"basic-multi-select\"\n              classNamePrefix=\"Selecione\"\n              onChange={(e: any) => UpdatedSpecialties(e)}\n            />\n          </Form.Group>\n          <br />\n          <h3>Cadastro de Endereço</h3>\n\n          <Form.Group>\n            <Row>\n              <Col>\n                <Form.Label>CEP</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"cep\"\n                  maxLength={8}\n                  placeholder=\"Digite o CEP\"\n                  value={cep.cep}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) => GetCep(e)}\n                />\n              </Col>\n              <Col>\n                <Form.Label>Cidade</Form.Label>\n                <Form.Control\n                  placeholder=\"\"\n                  type=\"text\"\n                  name=\"localidade\"\n                  value={adress.localidade}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedAdress(e)\n                  }\n                />\n              </Col>\n              <Col>\n                <Form.Label>Estado</Form.Label>\n                <Form.Control\n                  placeholder=\"\"\n                  type=\"text\"\n                  name=\"uf\"\n                  value={adress.uf}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedAdress(e)\n                  }\n                />\n              </Col>\n            </Row>\n            <Row>\n              <Col>\n                <Form.Label>Logradouro</Form.Label>\n                <Form.Control\n                  placeholder=\"\"\n                  type=\"text\"\n                  name=\"logradouro\"\n                  value={adress.logradouro}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedAdress(e)\n                  }\n                />\n              </Col>\n              <Col>\n                <Form.Label>Bairro</Form.Label>\n                <Form.Control\n                  placeholder=\"\"\n                  type=\"text\"\n                  name=\"bairro\"\n                  value={adress.bairro}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedAdress(e)\n                  }\n                />\n              </Col>\n              <Col>\n                <Form.Label>Complemento</Form.Label>\n                <Form.Control\n                  placeholder=\"\"\n                  type=\"text\"\n                  name=\"uf\"\n                  value={adress.complemento}\n                  onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                    UpdatedAdress(e)\n                  }\n                />\n              </Col>\n            </Row>\n          </Form.Group>\n          <br />\n          <Button variant=\"dark\" type=\"submit\">\n            Salvar\n          </Button>\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Doctors;\n"]},"metadata":{},"sourceType":"module"}